.container {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    transform: translate(-5%, 5%);
}
.containerSlideOut {
    animation: containerSlideOut 1s;
}
.center {
    justify-content: center;
}
.slideRight {
    transform: translateX(18%);
    transition: transform 0.5s;
}
.playerCardContainer {
    position: relative;
    display: flex;
    width: 85%;
    height: 20%;
    background-color: var(--bg-color);
    border-radius: calc(var(--vh) * 10) 1.5rem 1.5rem calc(var(--vh) * 10);
    border: 0.2rem outset var(--border-color);
    animation: slideLeft 1s;
}
.gatherToCenter0 {
    transform: translate(18%, 150%);
    transition: transform 1s;
}
.gatherToCenter1 {
    transform: translate(18%, 50%);
    transition: transform 1s;
}
.gatherToCenter2 {
    transform: translate(18%, -50%);
    transition: transform 1s;
}
.gatherToCenter3 {
    transform: translate(18%, -150%);
    transition: transform 1s;
}
.orderNumber {
    position: absolute;
    left: -15%;
    width: 15%;
    height: 100%;
    font-size: 5rem;
    color: white;
    -webkit-text-stroke: 0.15rem black;
    display: flex;
    justify-content: center;
    align-items: center;
}
.showOrderNumber {
    animation: zoomIn 0.5s, zoomOut 0.5s;
    animation-iteration-count: 2;
    animation-direction: alternate-reverse;
}
.controllerConfirmContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    left: 25%;
    transform: translateY(-50%);
    width: 60%;
    font-size: 3rem;
    line-height: 3rem;
    border: 0.2rem outset var(--border-color);
    border-radius: 9999px;
    background-color: var(--bg-color);
}
.playerCardContainer > img {
    width: calc(var(--vh) * 65 / 5);
}
.nameContainer {
    display: flex;
    flex-grow: 1;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
.nameArea {
    display: block;
    width: 95%;
    font-weight: bold;
    font-size: 3rem;
    line-height: 3rem;
}
.selectControllerContainer {
    display: flex;
    align-items: center;
    position: absolute;
    right: -10%;
    transform: translateY(-50%);
    width: 60%;
    font-size: 3rem;
    line-height: 3rem;
    border: 0.2rem outset var(--border-color);
    border-radius: 9999px;
    background-color: var(--bg-color);
}
.show {
    opacity: 1;
    transition: opacity 0.5s;
}
.hide {
    opacity: 0;
}
.leftTriangle {
    width: 0;
    height: 0;
    border-style: solid;
    /* 3rem(font-size) * 0.5 - 0.2rem(padding Y) */
    border-width: 1.3rem calc(1.732* 1.3rem) 1.3rem 1.5rem;
    border-color: transparent var(--border-color) transparent transparent;
}
.centeredText {
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
}
.rightTriangle {
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 1.3rem 1.5rem 1.3rem calc(1.732* 1.3rem);
    border-color: transparent transparent transparent var(--border-color); 
}
@keyframes containerSlideOut {
    0% { transform: none }
    100% { transform:  translate(150%, 5%) }
}
@keyframes slideLeft {
    0% { transform: translateX(100%) }
    100% { transform: none }
}
@keyframes zoomIn {
    0% { transform: none }
    100% { transform: scale(200%) }
}
@keyframes zoomOut {
    0% { transform: scale(200%) }
    100% { transform: none }
}


.leftTriangleHoverEffect {
    animation: leftTriangleHoverFrom 500ms, leftTriangleHoverTo 500ms;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: ease-in-out;
}
@keyframes leftTriangleHoverFrom {
    0% { border-color: transparent black transparent transparent }
    100% { border-color: transparent transparent transparent transparent }
}
@keyframes leftTriangleHoverTo {
    0% { border-color: transparent transparent transparent transparent }
    100% { border-color: transparent black transparent transparent }
}

.rightTriangleHoverEffect {
    animation: rightTriangleHoverFrom 500ms, rightTriangleHoverTo 500ms;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: ease-in-out;
}
@keyframes rightTriangleHoverFrom {
    0% { border-color: transparent transparent transparent black }
    100% { border-color: transparent transparent transparent transparent }
}
@keyframes rightTriangleHoverTo {
    0% { border-color: transparent transparent transparent transparent }
    100% { border-color: transparent transparent transparent black }
}